Operation Object:
  description: Describes a single API operation on a path.
  allowExtension: true
  changelog:
    isModified: true
    details: |
      - Better and consistent parameters description by using `Schema Object` even for atomic ones.
      - Request body is now defined separetely (`requestBody`).
      - Async/event API design is possible thanks to `callbacks` (webhooks).
      - The `servers` property enhance documentation and test possibilities (also available on top and path levels).
    deletedProperties:
      - 
        name: produces
        replacedBy: responses.{HTTP Status}.content.{media type}
        specificationAnchor: mediaTypeObject
      - 
        name: consumes
        replacedBy: requestBody.content.{media type}
        specificationAnchor: mediaTypeObject
      -
        name: schemes
        replacedBy: servers
        specificationAnchor: Server Object
  fields:
    - 
      name: tags
      type: "[string]"
      description: A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier.
    - 
      name: summary
      type: string
      description: A short summary of what the operation does. For maximum readability in editing or documentation generation tools, this field SHOULD be less than 120 characters.
    -
      name: description
      type: string
      md: CommonMark
      description: A verbose explanation of the operation behavior. CommonMark syntax can be used for rich text representation.
    -
      name: externalDocs
      type: External Documentation Object
      description: Additional external documentation for this operation.
    -
      name: operationId
      type: string
      description: Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions.
    -
      name: parameters
      type: "[Parameter Object]"
      allowReference: true
      changelog:
        isModified: true
        details: Does not describe body parameter anymore (see requestBody)
      description: A list of parameters that are applicable for this operation. If a parameter is already defined at the [Path Item](#pathItemParameters), the new definition will override it but can never remove it. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a [name](#parameterName) and [location](#parameterIn). The list can use the [Reference Object](#referenceObject) to link to parameters that are defined at the [OpenAPI Object's components/parameters](#componentsParameters).
    -
      name: requestBody
      type: Request Body Object
      allowReference: true
      required: true
      changelog:
        isNew: true
        details: Replace `parameters` with `in = body`
      description: The request body applicable for this operation.  The `requestBody` is only supported in HTTP methods where the HTTP 1.1 specification [RFC7231](https://tools.ietf.org/html/rfc7231#section-4.3.1) has explicitly defined semantics for request bodies.  In other cases where the HTTP spec is vague, `requestBody` SHALL be ignored by consumers.
    -
      name: responses
      type: Responses Object
      required: true
      descriptions: The list of possible responses as they are returned from executing this operation.
    -
      name: callbacks
      type: "{expression idenfiying URL, Callback Object}"
      changelog:
        isNew: true
      description: A map of possible out-of band callbacks related to the parent operation. The key is a unique identifier for the Callback Object. Each value in the map is a [Callback Object](#callbackObject) that describes a request that may be initiated by the API provider and the expected responses. The key value used to identify the callback object is an expression, evaluated at runtime, that identifies a URL to use for the callback operation.
    -
      name: deprecated
      type: boolean
      description: Declares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is `false`.
    -
      name: security
      type: Security Requirement Object
      changelog:
        isNew: true
      description: A declaration of which security mechanisms can be used for this operation. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. This definition overrides any declared top-level [`security`](#oasSecurity). To remove a top-level security declaration, an empty array can be used.
    -
      name: servers
      type: Server Object
      changelog:
        isNew: true
      description: An alternative `server` array to service this operation. If an alternative `server` object is specified at the Path Item Object or Root level, it will be overridden by this value.